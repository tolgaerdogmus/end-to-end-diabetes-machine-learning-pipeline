{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"\n# End to End Diabetes Machine Learning Pipeline\n\n* [Exploratory Data Analysis](#ExploratoryDataAnalysis)\n    * [Section 1.1](#section_1_1)\n* [Data Preproccessing & Feature Engineering](#DataPrepFeatureEngineering)\n    * [Section 2.1](#section_2_1)\n* [Base Models](#BaseModels)\n    * [Section 3.1](#section_3_1)\n* [Automated Hyperparameter Optimization](#AutomatedHyperparameterOptimization)\n    * [Section 4.1](#section_4_1)\n* [Stacking & Ensemble Learning](#StackingEnsembleLearning)\n    * [Section 5.1](#section_5_1)\n* [Prediction for a New Observation](#PredictionForANewObservation)\n    * [Section 6.1](#section_6_1)\n* [Pipeline Main Function](#PipelineMainFunction)\n    * [Section 7.1](#section_7_1)","metadata":{}},{"cell_type":"code","source":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-13T11:39:59.281407Z","iopub.execute_input":"2024-07-13T11:39:59.281842Z","iopub.status.idle":"2024-07-13T11:39:59.327434Z","shell.execute_reply.started":"2024-07-13T11:39:59.281806Z","shell.execute_reply":"2024-07-13T11:39:59.325985Z"},"trusted":true},"execution_count":1,"outputs":[{"traceback":["\u001b[0;36m  Cell \u001b[0;32mIn[1], line 12\u001b[0;36m\u001b[0m\n\u001b[0;31m    * [Chapter 1](#chapter1)\u001b[0m\n\u001b[0m       ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax. Perhaps you forgot a comma?\n"],"ename":"SyntaxError","evalue":"invalid syntax. Perhaps you forgot a comma? (4016243921.py, line 12)","output_type":"error"}]},{"cell_type":"markdown","source":"## Exploratory Data Analysis.  <a class=\"anchor\"  id=\"ExploratoryDataAnalysis\"></a>","metadata":{}}]}